#working python script to find out the sentence without phrases
import spacy
import re 
import time
from spacy.matcher import PhraseMatcher

import json

def find_sentences_with_keyword(keyword, document):
    
    #Iterate through all the sentences in the document and pull out the text of each sentence
    for sentence in document.sents:
        sentence = sentence.text
        #Check to see if the keyword is in the sentence (and ignore capitalization by making both lowercase)
        if keyword.lower() in sentence.lower():
            
            #Use the regex library to replace linebreaks and to make the keyword bolded, again ignoring capitalization
            sentence = re.sub('\n', ' ', sentence)
            sentence = re.sub(f"{keyword}", f"**{keyword}**", sentence, flags=re.IGNORECASE)
            # print(sentence)
            # print("done spacy")
            # time.sleep(5000)
            return sentence
            # display(Markdown(sentence))
 
def sentence_with_no_phrases(keyword, document):
    for sentence in document.sents:
        sentence = sentence.text
        if keyword.lower() not in sentence.lower():
            sentence = re.sub('\n','',sentence)
            sentence = re.sub(f"{keyword}", f"**{keyword}**",sentence, flags=re.IGNORECASE)  
            return sentence         
 

Genuine_cust = []
Sentence_WithoutPhrases = []

with open('sample.jsonl') as f:
        datas = [json.loads(line) for line in f]
        # print(data[0])
print('hello')
nlp = spacy.load('en_core_web_sm')

phrase_matcher = PhraseMatcher(nlp.vocab)

phrases = [' to appologies for', '  get alone drive', ' alone drive',' pulled over', 'we visited', ' went shopping at', 'i visited', 'went to gym', 'shopping in ','been shopping to','shopping as','we were shopping','Attaching receipts','attached receipts','i went to both', 'im a customer', 'i was a customer','i went into','I have receipts','went to','shopping centre', 'spending money','i am a member',' i visited', 'i was visiting', 'staying at']

patterns = [nlp(text) for text in phrases]

phrase_matcher.add('Genuine customer', None, *patterns)

for data in datas:
        string = str(data.values())
        # print(str(aa))
        sentence = nlp(string)
        # print(sentence)
        matched_phrases = phrase_matcher(sentence)

        for word in phrases:
            genuine_cust = sentence_with_no_phrases(keyword=word, document=sentence)
            if genuine_cust is not None:
                Genuine_cust.append(genuine_cust)


        for word in phrases:
            sentance_phrases = find_sentences_with_keyword(keyword=word, document=sentence)
            if sentance_phrases is not None:
                Sentence_WithoutPhrases.append(sentance_phrases)       

    # print(Genuine_cust)
dict = {
        'Genuine_customer':Genuine_cust
    }
dict1 = {
    'Sentence_withoutPhrases':Sentence_WithoutPhrases
}
    # Serializing json
json_object = json.dumps(dict, indent=4)

json_object1 = json.dumps(dict1)

    # Writing to sample.json
with open("withphrases.json", "w") as outfile:
        outfile.write(json_object)

with open("withoutphrases.json","w")as outfile1:
         outfile1.write(json_object1)        
